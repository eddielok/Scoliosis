#pragma checksum "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "46874aae2e7f071029a4861036813012fc6e4654"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Patient_InitAssessPage), @"mvc.1.0.view", @"/Views/Patient/InitAssessPage.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Patient/InitAssessPage.cshtml", typeof(AspNetCore.Views_Patient_InitAssessPage))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\_ViewImports.cshtml"
using Scoliosis;

#line default
#line hidden
#line 2 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\_ViewImports.cshtml"
using Scoliosis.Models;

#line default
#line hidden
#line 5 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
using Microsoft.AspNetCore.Http;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"46874aae2e7f071029a4861036813012fc6e4654", @"/Views/Patient/InitAssessPage.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"be8e439512c840af87b97aed2c7211338de1564a", @"/Views/_ViewImports.cshtml")]
    public class Views_Patient_InitAssessPage : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<Tuple<Scoliosis.Models.InfoBarViewModel, Scoliosis.Models.InfoInitAssessViewModel>>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/vendor/jquery/jquery.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", new global::Microsoft.AspNetCore.Html.HtmlString("text/javascript"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/jquerysession.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/moment.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/bootstrap.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/bootstrap-datetimepicker.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/sb-admin-2.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/Restrict.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/xBrowser.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/xLayer.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/staticMenu.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/vendor/fontawesome-free/css/all.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", new global::Microsoft.AspNetCore.Html.HtmlString("text/css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/sb-admin-2.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_15 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/dist/css/lightgallery.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_16 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/dist/css/lightslider.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_17 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/jquery-ui.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_18 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/jquery-ui.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_19 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/CreatePersonalInfo.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_20 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("form"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_21 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_22 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/jquery.validate.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_23 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/cleave.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_24 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/InitAssess.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_25 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/dist/js/lightgallery.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_26 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/dist/js/lightslider.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_27 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("page-top"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_28 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("background: #75C864;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 1, true);
            WriteLiteral("\n");
            EndContext();
#line 2 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
   Layout = null; 

#line default
#line hidden
            BeginContext(21, 1, true);
            WriteLiteral("\n");
            EndContext();
            BeginContext(145, 25, true);
            WriteLiteral("\n<!DOCTYPE html>\n\n<html>\n");
            EndContext();
            BeginContext(170, 8359, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "094992e395f943db8bddd72aa4c1e224", async() => {
                BeginContext(176, 176, true);
                WriteLiteral("\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <title>");
                EndContext();
                BeginContext(353, 17, false);
#line 14 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
      Write(ViewData["Title"]);

#line default
#line hidden
                EndContext();
                BeginContext(370, 65, true);
                WriteLiteral(" - Scoliosis</title>\n\n\n    <!-- Bootstrap core JavaScript-->\n    ");
                EndContext();
                BeginContext(435, 49, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ba791df4264046ca9c71d3320dbbba28", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(484, 5, true);
                WriteLiteral("\n    ");
                EndContext();
                BeginContext(489, 68, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "485a30b01e7f4ed0a039b0ecc097abdb", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(557, 5, true);
                WriteLiteral("\n    ");
                EndContext();
                BeginContext(562, 61, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "2b7b9e64235345acb8679291dbd6f49d", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(623, 5, true);
                WriteLiteral("\n    ");
                EndContext();
                BeginContext(628, 68, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0dfb412e084842d5a80ac39a37ac406f", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(696, 5, true);
                WriteLiteral("\n    ");
                EndContext();
                BeginContext(701, 83, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a4c9b3ad6d364215ad595e097bd680ec", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(784, 5, true);
                WriteLiteral("\n    ");
                EndContext();
                BeginContext(789, 46, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d66ca1ac0a974843a41c2c72746cc1e3", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(835, 6, true);
                WriteLiteral("\n\n    ");
                EndContext();
                BeginContext(841, 63, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c17b95b557e645c580154706782894a5", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(904, 5, true);
                WriteLiteral("\n    ");
                EndContext();
                BeginContext(909, 63, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1c79a2dccdc9475f8c32af782d552ac1", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(972, 5, true);
                WriteLiteral("\n    ");
                EndContext();
                BeginContext(977, 61, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7564c1402d3b4e6e9a57d60fd716e0d3", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1038, 5, true);
                WriteLiteral("\n    ");
                EndContext();
                BeginContext(1043, 65, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "92cd3dff1427468680b22e732abc00f5", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1108, 5, true);
                WriteLiteral("\n    ");
                EndContext();
                BeginContext(1113, 84, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "d35321b629bd4672afe5f4f2edf560c1", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1197, 150, true);
                WriteLiteral("\n    <link href=\"https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i\" rel=\"stylesheet\">\n    ");
                EndContext();
                BeginContext(1347, 51, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "df67ccb8b18a4ceb9263f89e3db35781", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_14);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1398, 5, true);
                WriteLiteral("\n    ");
                EndContext();
                BeginContext(1403, 58, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "c8a45138c62944c4b330c141509c6d7d", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_15);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1461, 5, true);
                WriteLiteral("\n    ");
                EndContext();
                BeginContext(1466, 57, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "0199be6bcad34e5f87e88e73a8068f21", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_16);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1523, 7, true);
                WriteLiteral("\n\n\n    ");
                EndContext();
                BeginContext(1530, 84, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "1356fae2b01c4bcc95bfe0eed27f9818", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1614, 150, true);
                WriteLiteral("\n    <link href=\"https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i\" rel=\"stylesheet\">\n    ");
                EndContext();
                BeginContext(1764, 51, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "cabc73162ef44d42984ca21907d50368", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_14);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1815, 6, true);
                WriteLiteral("\n\n    ");
                EndContext();
                BeginContext(1821, 41, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d20fa3a4c5eb49749021fd0a43453c21", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_17);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1862, 5, true);
                WriteLiteral("\n    ");
                EndContext();
                BeginContext(1867, 66, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "643fdd749c714dada0ff030e445f3f13", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_18);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1933, 5, true);
                WriteLiteral("\n    ");
                EndContext();
                BeginContext(1938, 75, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "7067cbca2cab4f7b8d1db2482721855f", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_19);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(2013, 2, true);
                WriteLiteral("\n\n");
                EndContext();
                BeginContext(2281, 6241, true);
                WriteLiteral(@"
    <style>
        h1 {
            font-size: 18px;
            font-family: Tahoma;
            font-weight: bolder;
        }

        td.title {
            font-family: Arial;
            font-weight: bold;
            font-size: 20px;
            background: RoyalBlue;
            color: white;
        }

        td.level1 {
            font-family: Arial;
            font-weight: bolder;
            font-size: 11pt;
            background: RoyalBlue;
            color: white;
        }

        td.level2 {
            font-family: Arial;
            font-weight: bold;
            font-size: 11pt;
            text-align: center;
            background: RoyalBlue;
            color: white;
        }

        td.level2a {
            font-family: Arial;
            font-size: 10pt;
            background: #eee;
            color: #000;
        }

        td.level2b {
            font-family: Arial;
            font-size: 10pt;
            background: #fff;
            color: #000;
        }

        td.");
                WriteLiteral(@"blank {
            height: 15px;
        }

        td.line {
            height: 1px;
        }

        input {
            font-family: Arial;
            font-size: 10p;
        }

        textarea {
            font-family: Arial;
            font-size: 10pt;
        }

        input.MenuButton {
            background-color: #eeeeee;
            font-family: Arial;
            font-size: 9pt;
            font-weight: 800;
            width: 80px;
        }

        td.title2 {
            font-size: 14px;
            padding: 5px 5px 5px 5px;
            color: #000000;
            text-align: left;
        }

        .buttonMenu {
            background-color: #eeeeee;
            font-family: Arial;
            font-size: 11pt;
            font-weight: 500;
            width: 80%;
        }

        .buttonVisit {
            background-color: #eeeeee;
            font-family: Arial;
            font-size: 11pt;
            color: white;
            width: 80%;
        }

        .but");
                WriteLiteral(@"tonVisitBlack {
            background-color: #eeeeee;
            font-family: Arial;
            font-size: 11pt;
            color: Background;
            width: 100%;
        }

        .buttonVisit {
            background-color: #eeeeee;
            font-family: Arial;
            font-size: 11pt;
            width: 80%;
        }

        .Sub-title {
            FONT-FAMILY: Tahoma,Arial;
            FONT-SIZE: 11pt;
            FONT-WEIGHT: bold;
            TEXT-ALIGN: center;
            BACKGROUND: #6495ED;
            COLOR: #ffffff;
            width: 80%;
        }

        .ContentA {
            FONT-FAMILY: Tahoma,Arial;
            FONT-SIZE: 11pt;
            BACKGROUND: #ffffff;
            COLOR: #000000;
            VERTICAL-ALIGN: middle;
            width: 80%;
            TEXT-ALIGN: center;
        }

        .ContentB {
            FONT-FAMILY: Tahoma,Arial;
            FONT-SIZE: 11pt;
            BACKGROUND: #eeeeee;
            COLOR: #000000;
       ");
                WriteLiteral(@"     VERTICAL-ALIGN: middle;
            width: 80%;
            TEXT-ALIGN: center;
        }

        .remarkField {
            width: 100%;
        }

        .post-modal {
            width: 100%;
            min-height: 100px;
            max-height: 200px;
            right: 0;
            top: 75px;
            left: 289px;
            overflow-y: scroll;
        }

        body {
            background: #75C864;
            font-family: Arial;
            /*max-height: 800px;*/
            overflow: hidden
        }

        .item-a {
            width: 90%;
            height: 90%;
        }

        ul.TOCIul {
            list-style-type: none;
        }

        li.TOCIli {
            display: inline-block;
        }

        input[type=""checkbox""][id^=""myCheckbox""] {
            display: none;
        }

        label {
            padding: 2px;
            display: block;
            position: relative;
            margin: 2px;
            cursor: pointer;
     ");
                WriteLiteral(@"   }

            label:before {
                background-color: white;
                color: white;
                content: "" "";
                display: block;
                border-radius: 50%;
                border: 1px solid grey;
                position: absolute;
                top: -5px;
                left: -5px;
                width: 25px;
                height: 25px;
                text-align: center;
                line-height: 28px;
                transition-duration: 0.4s;
                transform: scale(0);
            }

            label img {
                height: 300px;
                width: 150px;
                transition-duration: 0.2s;
                transform-origin: 50% 50%;
            }

        :checked + label {
            border-color: #ddd;
        }

            :checked + label:before {
                content: ""✓"";
                background-color: grey;
                transform: scale(1);
            }

            :");
                WriteLiteral(@"checked + label img {
                transform: scale(0.9);
                /* box-shadow: 0 0 5px #333; */
                z-index: -1;
            }

        #TOCI {
            width: 0px;
            display: none;
        }

        .patientTable {
        }

        ul {
            list-style: none outside none;
            padding-left: 0;
            margin: 0;
        }

        .demo .item {
            margin-bottom: 60px;
        }

        .lightgallery li {
            text-align: center;
            color: #FFF;
        }

        .lightgallery ul {
            display: inline-block;
        }

        .lightgallery h3 {
            margin: 0;
        }

        .post-modal {
            width: 100%;
            min-height: 100px;
            max-height: 200px;
            right: 0;
            top: 75px;
            left: 289px;
            overflow-y: scroll;
        }

        .tableBorderTPStyle {
            border: 2px solid #888;
       ");
                WriteLiteral("     font-size: 13pt;\r\n            /*style=\"border: 3px solid #000;\"*/\r\n        }\n    </style>\n\n\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(8529, 2, true);
            WriteLiteral("\n\n");
            EndContext();
            BeginContext(8531, 70359, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "15c65d16980f456f8095cf692edd7ef8", async() => {
                BeginContext(8580, 6, true);
                WriteLiteral("\n\n    ");
                EndContext();
                BeginContext(8586, 58060, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4d00664146194f92a7ad478d051325d3", async() => {
                    BeginContext(8672, 409, true);
                    WriteLiteral(@"

        <div id=""wrapper"">

            <div style=""height: 100vh;overflow-y: scroll;overflow-x: hidden"">
                <ul class=""navbar-nav  sidebar sidebar-dark accordion"" id=""accordionSidebar"">


                    <li class=""nav-item"">

                        <div class=""Sub-title"">Patient</div>
                        <hr class=""sidebar-dividerTP"">
                        <div class=""ContentA"">");
                    EndContext();
                    BeginContext(9082, 15, false);
#line 340 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                         Write(Model.Item1.SCN);

#line default
#line hidden
                    EndContext();
                    BeginContext(9097, 108, true);
                    WriteLiteral("</div>\n                        <hr class=\"sidebar-dividerTP\">\n                        <div class=\"ContentB\">");
                    EndContext();
                    BeginContext(9206, 16, false);
#line 342 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                         Write(Model.Item1.Name);

#line default
#line hidden
                    EndContext();
                    BeginContext(9222, 108, true);
                    WriteLiteral("</div>\n                        <hr class=\"sidebar-dividerTP\">\n                        <div class=\"ContentA\">");
                    EndContext();
                    BeginContext(9331, 16, false);
#line 344 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                         Write(Model.Item1.HKID);

#line default
#line hidden
                    EndContext();
                    BeginContext(9347, 191, true);
                    WriteLiteral("</div>\n                        <hr class=\"sidebar-dividerTP\">\n\n                        <div class=\"Sub-title\">Visit Info</div>\n\n                        <input type=\"button\" class=\"buttonMenu\"");
                    EndContext();
                    BeginWriteAttribute("onclick", " onclick=\"", 9538, "\"", 9605, 3);
                    WriteAttributeValue("", 9548, "goToUrl(\'../Patient/InitAssessPage?SCN=", 9548, 39, true);
#line 349 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
WriteAttributeValue("", 9587, Model.Item2.SCN, 9587, 16, false);

#line default
#line hidden
                    WriteAttributeValue("", 9603, "\')", 9603, 2, true);
                    EndWriteAttribute();
                    BeginContext(9606, 146, true);
                    WriteLiteral(" value=\"Initial Assesment\">\n                        <hr class=\"sidebar-dividerTP\">\n                        <input type=\"button\" class=\"buttonMenu\"");
                    EndContext();
                    BeginWriteAttribute("onclick", " onclick=\"", 9752, "\"", 9814, 3);
                    WriteAttributeValue("", 9762, "goToUrl(\'../Patient/VisitPage?SCN=", 9762, 34, true);
#line 351 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
WriteAttributeValue("", 9796, Model.Item2.SCN, 9796, 16, false);

#line default
#line hidden
                    WriteAttributeValue("", 9812, "\')", 9812, 2, true);
                    EndWriteAttribute();
                    BeginContext(9815, 138, true);
                    WriteLiteral(" value=\"New Visit\">\n                        <hr class=\"sidebar-dividerTP\">\n                        <input type=\"button\" class=\"buttonMenu\"");
                    EndContext();
                    BeginWriteAttribute("onclick", " onclick=\"", 9953, "\"", 10026, 3);
                    WriteAttributeValue("", 9963, "goToUrl(\'../Patient/EditPersonalInfoPage?SCN=", 9963, 45, true);
#line 353 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
WriteAttributeValue("", 10008, Model.Item2.SCN, 10008, 16, false);

#line default
#line hidden
                    WriteAttributeValue("", 10024, "\')", 10024, 2, true);
                    EndWriteAttribute();
                    BeginContext(10027, 142, true);
                    WriteLiteral(" value=\"Personal Info\">\n                        <hr class=\"sidebar-dividerTP\">\n                        <input type=\"button\" class=\"buttonMenu\"");
                    EndContext();
                    BeginWriteAttribute("onclick", " onclick=\"", 10169, "\"", 10239, 3);
                    WriteAttributeValue("", 10179, "goToUrl(\'../Patient/OperativeDataList?SCN=", 10179, 42, true);
#line 355 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
WriteAttributeValue("", 10221, Model.Item2.SCN, 10221, 16, false);

#line default
#line hidden
                    WriteAttributeValue("", 10237, "\')", 10237, 2, true);
                    EndWriteAttribute();
                    BeginContext(10240, 143, true);
                    WriteLiteral(" value=\"Operative Data\">\n                        <hr class=\"sidebar-dividerTP\">\n                        <input type=\"button\" class=\"buttonMenu\"");
                    EndContext();
                    BeginWriteAttribute("onclick", " onclick=\"", 10383, "\"", 10445, 3);
                    WriteAttributeValue("", 10393, "goToUrl(\'../Patient/VisitList?SCN=", 10393, 34, true);
#line 357 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
WriteAttributeValue("", 10427, Model.Item2.SCN, 10427, 16, false);

#line default
#line hidden
                    WriteAttributeValue("", 10443, "\')", 10443, 2, true);
                    EndWriteAttribute();
                    BeginContext(10446, 139, true);
                    WriteLiteral(" value=\"Visits List\">\n                        <hr class=\"sidebar-dividerTP\">\n\n\n                        <div class=\"Sub-title\">Visits</div>\n");
                    EndContext();
#line 362 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                         foreach (var visit in @Model.Item1.visits)
                        {
                            if (@visit.Substring(0, 1) == "n")
                            {

#line default
#line hidden
                    BeginContext(10772, 77, true);
                    WriteLiteral("            <input type=\"button\" style=\"background:Green\" class=\"buttonVisit\"");
                    EndContext();
                    BeginWriteAttribute("onclick", " onclick=\"", 10849, "\"", 10939, 5);
                    WriteAttributeValue("", 10859, "goToUrl(\'../Patient/VisitPage?SCN=", 10859, 34, true);
#line 366 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
WriteAttributeValue("", 10893, Model.Item2.SCN, 10893, 16, false);

#line default
#line hidden
                    WriteAttributeValue("", 10909, "&DOB=", 10909, 5, true);
#line 366 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
WriteAttributeValue("", 10914, visit.Substring(2, 10), 10914, 23, false);

#line default
#line hidden
                    WriteAttributeValue("", 10937, "\')", 10937, 2, true);
                    EndWriteAttribute();
                    BeginWriteAttribute("value", " value=\"", 10940, "\"", 10955, 2);
#line 366 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
WriteAttributeValue("", 10948, visit, 10948, 6, false);

#line default
#line hidden
                    WriteAttributeValue(" ", 10954, "", 10955, 1, true);
                    EndWriteAttribute();
                    BeginContext(10956, 2, true);
                    WriteLiteral("> ");
                    EndContext();
#line 366 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                                                                                                                                                          }
        else if (@visit.Substring(0, 1) == "p")
        {

#line default
#line hidden
                    BeginContext(11018, 64, true);
                    WriteLiteral("<input type=\"button\" style=\"background:pink\" class=\"buttonVisit\"");
                    EndContext();
                    BeginWriteAttribute("onclick", " onclick=\"", 11082, "\"", 11172, 5);
                    WriteAttributeValue("", 11092, "goToUrl(\'../Patient/VisitPage?SCN=", 11092, 34, true);
#line 369 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
WriteAttributeValue("", 11126, Model.Item2.SCN, 11126, 16, false);

#line default
#line hidden
                    WriteAttributeValue("", 11142, "&DOB=", 11142, 5, true);
#line 369 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
WriteAttributeValue("", 11147, visit.Substring(2, 10), 11147, 23, false);

#line default
#line hidden
                    WriteAttributeValue("", 11170, "\')", 11170, 2, true);
                    EndWriteAttribute();
                    BeginWriteAttribute("value", " value=\"", 11173, "\"", 11188, 2);
#line 369 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
WriteAttributeValue("", 11181, visit, 11181, 6, false);

#line default
#line hidden
                    WriteAttributeValue(" ", 11187, "", 11188, 1, true);
                    EndWriteAttribute();
                    BeginContext(11189, 2, true);
                    WriteLiteral("> ");
                    EndContext();
#line 369 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                                                                                                                                             }
else if (@visit.Substring(0, 1) == "o")
{

#line default
#line hidden
                    BeginContext(11235, 64, true);
                    WriteLiteral("<input type=\"button\" style=\"background:blue\" class=\"buttonVisit\"");
                    EndContext();
                    BeginWriteAttribute("onclick", " onclick=\"", 11299, "\"", 11389, 5);
                    WriteAttributeValue("", 11309, "goToUrl(\'../Patient/VisitPage?SCN=", 11309, 34, true);
#line 372 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
WriteAttributeValue("", 11343, Model.Item2.SCN, 11343, 16, false);

#line default
#line hidden
                    WriteAttributeValue("", 11359, "&DOB=", 11359, 5, true);
#line 372 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
WriteAttributeValue("", 11364, visit.Substring(2, 10), 11364, 23, false);

#line default
#line hidden
                    WriteAttributeValue("", 11387, "\')", 11387, 2, true);
                    EndWriteAttribute();
                    BeginWriteAttribute("value", " value=\"", 11390, "\"", 11405, 2);
#line 372 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
WriteAttributeValue("", 11398, visit, 11398, 6, false);

#line default
#line hidden
                    WriteAttributeValue(" ", 11404, "", 11405, 1, true);
                    EndWriteAttribute();
                    BeginContext(11406, 2, true);
                    WriteLiteral("> ");
                    EndContext();
#line 372 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                                                                                                                                             }
else
{

#line default
#line hidden
                    BeginContext(11417, 45, true);
                    WriteLiteral("<input type=\"button\" class=\"buttonVisitBlack\"");
                    EndContext();
                    BeginWriteAttribute("onclick", " onclick=\"", 11462, "\"", 11552, 5);
                    WriteAttributeValue("", 11472, "goToUrl(\'../Patient/VisitPage?SCN=", 11472, 34, true);
#line 375 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
WriteAttributeValue("", 11506, Model.Item2.SCN, 11506, 16, false);

#line default
#line hidden
                    WriteAttributeValue("", 11522, "&DOB=", 11522, 5, true);
#line 375 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
WriteAttributeValue("", 11527, visit.Substring(2, 10), 11527, 23, false);

#line default
#line hidden
                    WriteAttributeValue("", 11550, "\')", 11550, 2, true);
                    EndWriteAttribute();
                    BeginWriteAttribute("value", " value=\"", 11553, "\"", 11568, 2);
#line 375 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
WriteAttributeValue("", 11561, visit, 11561, 6, false);

#line default
#line hidden
                    WriteAttributeValue(" ", 11567, "", 11568, 1, true);
                    EndWriteAttribute();
                    BeginContext(11569, 2, true);
                    WriteLiteral("> ");
                    EndContext();
#line 375 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                                                                                                                          }



#line default
#line hidden
                    BeginContext(11575, 30, true);
                    WriteLiteral("<hr class=\"sidebar-dividerTP\">");
                    EndContext();
#line 378 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                              }

#line default
#line hidden
                    BeginContext(11607, 961, true);
                    WriteLiteral(@"
                    </li>

                    <!-- Divider -->
                    <hr class=""sidebar-divider"">

                    <li class=""nav-item"">

                        <input type=""button"" class=""buttonMenu"" onclick=""goToUrl('../home/index')"" value=""Home page"">
                        <hr class=""sidebar-dividerTP"">
                        <input type=""button"" class=""buttonMenu"" onclick=""goToUrl('../Patient/SearchTrad')"" value=""Search Page"">
                        <hr class=""sidebar-dividerTP"">
                        <input type=""button"" class=""buttonMenu"" onclick=""goToUrl('../Patient/TextSearch')"" value=""Words/Text Search"">
                        <hr class=""sidebar-dividerTP"">
                        <input type=""button"" class=""buttonMenu"" onclick=""goToUrl('../Patient/CreatePersonalInfoPage')"" value=""New Patient"">
                        <hr class=""sidebar-dividerTP"">
                        <input type=""button"" class=""buttonMenu""");
                    EndContext();
                    BeginWriteAttribute("onclick", " onclick=\"", 12568, "\"", 12630, 3);
                    WriteAttributeValue("", 12578, "goToUrl(\'../Patient/VisitPage?SCN=", 12578, 34, true);
#line 395 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
WriteAttributeValue("", 12612, Model.Item2.SCN, 12612, 16, false);

#line default
#line hidden
                    WriteAttributeValue("", 12628, "\')", 12628, 2, true);
                    EndWriteAttribute();
                    BeginContext(12631, 917, true);
                    WriteLiteral(@" value=""New Visit"">
                        <hr class=""sidebar-dividerTP"">
                        <input type=""button"" class=""buttonMenu"" onclick=""goToUrl('../Identity/Account/Login')"" value=""Logout"">

                    </li>
                    <!-- Divider -->
                    <hr class=""sidebar-divider d-none d-md-block"">

                </ul>
            </div>

            <div id=""content-wrapper"" class=""d-flex flex-column"" style=""height: 100vh; overflow-y: scroll;"">


                <!-- Main Content -->
                <div id=""content"">


                    <div class=""col-lg-12"">
                        <!-- Content Row -->
                        <div class=""row"">
                            <!-- Content Column -->
                            <div class=""col-lg-12 mb-4"">
                                <div class=""post-modal"">


                                    <div class=""demo"">

");
                    EndContext();
#line 423 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                         if (Model.Item2.VisitList != null && Model.Item2.VisitList.Count != 0)
                                        {

#line default
#line hidden
                    BeginContext(13702, 110, true);
                    WriteLiteral("                            <ul id=\"lightgallery\">\n                                <!--class=\"ightgallery\"-->\n");
                    EndContext();
#line 427 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                 for (int i = 0; i < Model.Item2.VisitList.Count(); i++)
                                {

#line default
#line hidden
                    BeginContext(13935, 19, true);
                    WriteLiteral("                <li");
                    EndContext();
                    BeginWriteAttribute("id", " id=\"", 13954, "\"", 13984, 1);
#line 429 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
WriteAttributeValue("", 13959, Model.Item2.VisitList[i], 13959, 25, false);

#line default
#line hidden
                    EndWriteAttribute();
                    BeginContext(13985, 13, true);
                    WriteLiteral(" data-thumb=\"");
                    EndContext();
                    BeginContext(13999, 24, false);
#line 429 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                          Write(Model.Item2.VisitList[i]);

#line default
#line hidden
                    EndContext();
                    BeginContext(14023, 12, true);
                    WriteLiteral("\" data-src=\"");
                    EndContext();
                    BeginContext(14036, 24, false);
#line 429 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                                                               Write(Model.Item2.VisitList[i]);

#line default
#line hidden
                    EndContext();
                    BeginContext(14060, 17, true);
                    WriteLiteral("\" data-sub-html=\"");
                    EndContext();
                    BeginContext(14078, 30, false);
#line 429 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                                                                                                         Write(Model.Item2.PhotoModifyList[i]);

#line default
#line hidden
                    EndContext();
                    BeginContext(14108, 93, true);
                    WriteLiteral("\">\n                    <a href=\"\">\n                        <img class=\"img-responsive item-a\"");
                    EndContext();
                    BeginWriteAttribute("src", " src=\"", 14201, "\"", 14232, 1);
#line 431 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
WriteAttributeValue("", 14207, Model.Item2.VisitList[i], 14207, 25, false);

#line default
#line hidden
                    EndWriteAttribute();
                    BeginContext(14233, 80, true);
                    WriteLiteral(">\n                        <div class=\"caption\">\n                            <h9>");
                    EndContext();
                    BeginContext(14314, 28, false);
#line 433 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                           Write(Model.Item2.VisitListName[i]);

#line default
#line hidden
                    EndContext();
                    BeginContext(14342, 84, true);
                    WriteLiteral("</h9>\n                        </div>\n                    </a>\n                </li>\n");
                    EndContext();
#line 437 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
}

#line default
#line hidden
                    BeginContext(14428, 34, true);
                    WriteLiteral("                            </ul> ");
                    EndContext();
#line 438 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                  }
                        else
                        {

#line default
#line hidden
                    BeginContext(14519, 80, true);
                    WriteLiteral("            <div><h1><font color=\"#FFF\"> No X-Ray/Photo Found </font></h1></div>");
                    EndContext();
#line 441 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                                                }

#line default
#line hidden
                    BeginContext(14601, 297, true);
                    WriteLiteral(@"



                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>


                    <div class=""container-fluid"">

                        <input onchange="""" type=""hidden"" name=SCN");
                    EndContext();
                    BeginWriteAttribute("value", " value=\'", 14898, "\'", 14922, 1);
#line 455 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
WriteAttributeValue("", 14906, Model.Item2.SCN, 14906, 16, false);

#line default
#line hidden
                    EndWriteAttribute();
                    BeginContext(14923, 1451, true);
                    WriteLiteral(@">
                        <table border=""0"" width=""87%"" cellspacing=""0"" cellpadding=""0"">
                            <tr>
                                <td>
                                    <table border=""0"" cellspacing=""0"" cellpadding=""2"">
                                        <tr>
                                            <td width=""25%""></td>
                                            <td width=""40%""></td>
                                            <td width=""35%""></td>
                                        </tr>

                                        <tr><td colspan=""3"" class=""title"" style=""text-align: center"">Initial Assessment</td></tr>
                                        <tr><td colspan=""3"" class=""line""></td></tr>

                                        <tr><td class=""level1"" colspan=""3"">&nbsp; General Information</td></tr>

                                        <tr><td colspan=""3"" class=""line""></td></tr>
                                        <tr>
                               ");
                    WriteLiteral(@"             <td valign=top class=""level2"">Date of Initial Assessment</td>
                                            <td class=""level2b"" colspan=""2"">
                                                &nbsp;
                                                <input type=""text"" class=""class-DOC""
                                                       id=""iadate""
                                                       name=""iadate""");
                    EndContext();
                    BeginWriteAttribute("value", "\n                                                       value=\"", 16374, "\"", 16456, 1);
#line 479 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
WriteAttributeValue("", 16437, Model.Item2.iadate, 16437, 19, false);

#line default
#line hidden
                    EndWriteAttribute();
                    BeginContext(16457, 810, true);
                    WriteLiteral(@"
                                                       placeholder=""dd/mm/yyyy"">
                                                &nbsp;   <input type=""button"" value=""Today"" onclick=""today()"">
                                            </td>
                                        </tr>

                                        <tr><td colspan=""3"" class=""line""></td></tr>
                                        <tr>
                                            <td valign=top class=""level2"" rowspan=""2"">Referral source</td>
                                            <td valign=top class=""level2a"" colspan=""2"">
                                                <input id=""isReferralStudent"" name=""isReferralStudent"" class=""""
                                                       type=""checkbox"" value=""true"" ");
                    EndContext();
                    BeginContext(17269, 69, false);
#line 490 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                                                Write(Model.Item2.isReferralStudent == "true" ? "checked=\" checked\"" : "");

#line default
#line hidden
                    EndContext();
                    BeginContext(17339, 558, true);
                    WriteLiteral(@"
                                                       onclick=""SetReferral(this)"" />
                                                student health service
                                            </td>
                                        </tr>
                                        <tr>
                                            <td valign=top class=""level2a"">
                                                <input id=""isReferralOther"" name=""isReferralOther""
                                                       type=""checkbox"" value=""true"" ");
                    EndContext();
                    BeginContext(17899, 67, false);
#line 498 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                                                Write(Model.Item2.isReferralOther == "true" ? "checked=\" checked\"" : "");

#line default
#line hidden
                    EndContext();
                    BeginContext(17967, 222, true);
                    WriteLiteral(" onclick=\"SetReferral(this)\" />others, specify:\n                                            </td>\n                                            <td valign=top class=\"level2a\">\n                                                ");
                    EndContext();
                    BeginContext(18190, 148, false);
#line 501 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                           Write(Html.TextArea("ReferralOther", Model.Item2.ReferralOther, 3, 43, new { @class = "", onkeyup = "AutoCheck(this,isReferralOther,isReferralStudent)" }));

#line default
#line hidden
                    EndContext();
                    BeginContext(18338, 625, true);
                    WriteLiteral(@"
                                            </td>
                                        </tr>
                                        <tr><td colspan=""3"" class=""line""></td></tr>
                                        <tr valign=top>
                                            <td valign=top class=""level2"" rowspan=""2"">Patient's main concern</td>
                                            <td valign=top class=""level2b"" colspan=""2"">
                                                <input id=""isConcernNil"" name=""isConcernNil"" class="""" type=""checkbox""
                                                       value=""true"" ");
                    EndContext();
                    BeginContext(18965, 64, false);
#line 509 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                                Write(Model.Item2.isConcernNil == "true" ? "checked=\" checked\"" : "");

#line default
#line hidden
                    EndContext();
                    BeginContext(19030, 434, true);
                    WriteLiteral(@" onclick=""SetConcern(this)"" />nil
                                            </td>


                                        </tr>
                                        <tr>
                                            <td valign=top class=""level2b"">
                                                <input id=""isConcernOther"" name=""isConcernOther"" type=""checkbox""
                                                       value=""true"" ");
                    EndContext();
                    BeginContext(19466, 66, false);
#line 517 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                                Write(Model.Item2.isConcernOther == "true" ? "checked=\" checked\"" : "");

#line default
#line hidden
                    EndContext();
                    BeginContext(19533, 271, true);
                    WriteLiteral(@" onclick=""SetConcern(this)"" />
                                                others, specify:
                                            </td>
                                            <td valign=top class=""level2b"">

                                                ");
                    EndContext();
                    BeginContext(19805, 140, false);
#line 522 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                           Write(Html.TextArea("ConcernOther", Model.Item2.ConcernOther, 3, 43, new { @class = "", onkeyup = "AutoCheck(this,isConcernOther,isConcernNil)" }));

#line default
#line hidden
                    EndContext();
                    BeginContext(19945, 2822, true);
                    WriteLiteral(@"
                                                <span id=hello onclick=""ToggleConcernList()""><u style=""cursor: hand"">Choose from list</u></span>
                                                <div id=ConcernList style=""display:none"">
                                                    <table class=""choice"" border=""0"" cellspacing=""1"" color=""#000"">
                                                        <tr><td class=""choice"" onclick=""AddConcern('risk of progression;')"">risk of progression;</td></tr>
                                                        <tr><td class=""choice"" onclick=""AddConcern('associated morbidity;')"">associated morbidity;</td></tr>
                                                        <tr><td class=""choice"" onclick=""AddConcern('body symmetry;')"">body symmetry;</td></tr>
                                                        <tr><td class=""choice"" onclick=""AddConcern('future morbidity;')"">futre morbidity;</td></tr>
                                                        <tr><td class=");
                    WriteLiteral(@"""choice"" onclick=""AddConcern('future ill health;')"">future ill health;</td></tr>
                                                    </table>
                                                </div>
                                            </td>
                                        </tr>


                                        <tr><td class=""blank""></td></tr>
                                        <tr><td class=""level1"">&nbsp;History</td><td class=""level1"" colspan=""2""><input type=""button"" value=""Set History Normal"" onclick=""SetHistory()""> - Mark all items in History section as nil/normal/healthy</td></tr>

                                        <tr><td colspan=""3"" class=""line""></td></tr>
                                        <style>
                                            table.choice {
                                                background-color: #000000;
                                            }

                                            td.choice {
                                  ");
                    WriteLiteral(@"              background-color: #FFFFFF;
                                                font-famliy: Arial;
                                                color: #000000;
                                                font-size: 12px;
                                                cursor: hand;
                                            }
                                        </style>

                                        <tr>
                                            <td valign=top class=""level2"" rowspan=""5"">Symptoms &amp; history of present illness</td>
                                            <td colspan=""2"" class=""level2a"">
                                                <input id=""isSymNil"" name=""isSymNil"" class="""" type=""checkbox"" value=""true"" ");
                    EndContext();
                    BeginContext(22769, 60, false);
#line 558 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                                                                                       Write(Model.Item2.isSymNil == "true" ? "checked=\" checked\"" : "");

#line default
#line hidden
                    EndContext();
                    BeginContext(22830, 376, true);
                    WriteLiteral(@" onclick=""SetSymptom(this)"" />
                                                nil
                                            </td>
                                        </tr>
                                        <tr>
                                            <td valign=top class=""level2a""><input id=""isSymBack"" name=""isSymBack"" class="""" type=""checkbox"" value=""true"" ");
                    EndContext();
                    BeginContext(23208, 61, false);
#line 563 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                                                                                                                    Write(Model.Item2.isSymBack == "true" ? "checked=\" checked\"" : "");

#line default
#line hidden
                    EndContext();
                    BeginContext(23270, 180, true);
                    WriteLiteral(" onclick=\"SetSymptom(this)\" /> back pain, specify:</td>\n                                            <td valign=top class=\"level2a\">\n                                                ");
                    EndContext();
                    BeginContext(23451, 121, false);
#line 565 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                           Write(Html.TextArea("SymBack", Model.Item2.SymBack, 3, 43, new { @class = "", onkeyup = "AutoCheck(this,isSymBack,isSymNil)" }));

#line default
#line hidden
                    EndContext();
                    BeginContext(23572, 334, true);
                    WriteLiteral(@"
                                            </td>
                                        </tr>
                                        <tr>
                                            <td valign=top class=""level2a"">
                                                <input id=""isSymLimb"" name=""isSymLimb"" type=""checkbox"" value=""true"" ");
                    EndContext();
                    BeginContext(23908, 61, false);
#line 570 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                                                                                Write(Model.Item2.isSymLimb == "true" ? "checked=\" checked\"" : "");

#line default
#line hidden
                    EndContext();
                    BeginContext(23970, 319, true);
                    WriteLiteral(@" onclick=""SetSymptom(this)"" />
                                                lower limb neurological<br>&nbsp; &nbsp; &nbsp; symptom, specify:
                                            </td>
                                            <td valign=top class=""level2a"">
                                                ");
                    EndContext();
                    BeginContext(24290, 121, false);
#line 574 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                           Write(Html.TextArea("SymLimb", Model.Item2.SymLimb, 3, 43, new { @class = "", onkeyup = "AutoCheck(this,isSymLimb,isSymNil)" }));

#line default
#line hidden
                    EndContext();
                    BeginContext(24411, 332, true);
                    WriteLiteral(@"
                                            </td>
                                        </tr>
                                        <tr>
                                            <td valign=top class=""level2a"">
                                                <input id=""isSymCon"" name=""isSymCon"" type=""checkbox"" value=""true"" ");
                    EndContext();
                    BeginContext(24745, 60, false);
#line 579 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                                                                              Write(Model.Item2.isSymCon == "true" ? "checked=\" checked\"" : "");

#line default
#line hidden
                    EndContext();
                    BeginContext(24806, 366, true);
                    WriteLiteral(@" onclick=""SetSymptom(this)"" />
                                                constitutional symptoms<br>&nbsp; &nbsp; &nbsp; such as weight loss, <br>&nbsp; &nbsp; &nbsp; malaise, anorexia:
                                            </td>
                                            <td valign=top class=""level2a"">
                                                ");
                    EndContext();
                    BeginContext(25173, 118, false);
#line 583 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                           Write(Html.TextArea("SymCon", Model.Item2.SymCon, 3, 43, new { @class = "", onkeyup = "AutoCheck(this,isSymCon,isSymNil)" }));

#line default
#line hidden
                    EndContext();
                    BeginContext(25291, 336, true);
                    WriteLiteral(@"
                                            </td>
                                        </tr>
                                        <tr>
                                            <td valign=top class=""level2a"">
                                                <input id=""isSymOther"" name=""isSymOther"" type=""checkbox"" value=""true"" ");
                    EndContext();
                    BeginContext(25629, 62, false);
#line 588 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                                                                                  Write(Model.Item2.isSymOther == "true" ? "checked=\" checked\"" : "");

#line default
#line hidden
                    EndContext();
                    BeginContext(25692, 270, true);
                    WriteLiteral(@" onclick=""SetSymptom(this)"" />
                                                others, specify:
                                            </td>
                                            <td valign=top class=""level2a"">
                                                ");
                    EndContext();
                    BeginContext(25963, 124, false);
#line 592 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                           Write(Html.TextArea("SymOther", Model.Item2.SymOther, 3, 43, new { @class = "", onkeyup = "AutoCheck(this,isSymOther,isSymNil)" }));

#line default
#line hidden
                    EndContext();
                    BeginContext(26087, 537, true);
                    WriteLiteral(@"
                                            </td>
                                        </tr>

                                        <tr><td colspan=""3"" class=""line""></td></tr>

                                        <tr>
                                            <td valign=top rowspan=""4"" class=""level2"">Past health</td>
                                            <td valign=top class=""level2b"" colspan=""2"">
                                                <input id=""isPastGood"" name=""isPastGood"" type=""checkbox"" value=""true"" ");
                    EndContext();
                    BeginContext(26626, 62, false);
#line 601 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                                                                                  Write(Model.Item2.isPastGood == "true" ? "checked=\" checked\"" : "");

#line default
#line hidden
                    EndContext();
                    BeginContext(26689, 432, true);
                    WriteLiteral(@" onclick=""SetPast(this)"" />
                                                good past health
                                            </td>
                                        </tr>
                                        <tr>
                                            <td valign=top class=""level2b"">
                                                <input id=""isPastSpinal"" name=""isPastSpinal"" type=""checkbox"" value=""true"" ");
                    EndContext();
                    BeginContext(27123, 64, false);
#line 607 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                                                                                      Write(Model.Item2.isPastSpinal == "true" ? "checked=\" checked\"" : "");

#line default
#line hidden
                    EndContext();
                    BeginContext(27188, 309, true);
                    WriteLiteral(@" onclick=""SetPast(this)"" />
                                                previous spinal injuries,<br>&nbsp; &nbsp; &nbsp; specify:
                                            </td>
                                            <td valign=top class=""level2b"">
                                                ");
                    EndContext();
                    BeginContext(27498, 132, false);
#line 611 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                           Write(Html.TextArea("PastSpinal", Model.Item2.PastSpinal, 3, 43, new { @class = "", onkeyup = "AutoCheck(this,isPastSpinal,isPastGood)" }));

#line default
#line hidden
                    EndContext();
                    BeginContext(27630, 338, true);
                    WriteLiteral(@"
                                            </td>
                                        </tr>
                                        <tr>
                                            <td valign=top class=""level2b"">
                                                <input id=""isPastSpinal"" name=""isPastBone"" type=""checkbox"" value=""true"" ");
                    EndContext();
                    BeginContext(27970, 62, false);
#line 616 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                                                                                    Write(Model.Item2.isPastBone == "true" ? "checked=\" checked\"" : "");

#line default
#line hidden
                    EndContext();
                    BeginContext(28033, 318, true);
                    WriteLiteral(@" onclick=""SetPast(this)"" />
                                                Previous bone and joint<br>&nbsp; &nbsp; &nbsp; infection, specify:
                                            </td>
                                            <td valign=top class=""level2b"">
                                                ");
                    EndContext();
                    BeginContext(28352, 128, false);
#line 620 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                           Write(Html.TextArea("PastBone", Model.Item2.PastSpinal, 3, 43, new { @class = "", onkeyup = "AutoCheck(this,isPastBone,isPastGood)" }));

#line default
#line hidden
                    EndContext();
                    BeginContext(28480, 339, true);
                    WriteLiteral(@"
                                            </td>
                                        </tr>
                                        <tr>
                                            <td valign=top class=""level2b"">
                                                <input id=""isPastSpinal"" name=""isPastOther"" type=""checkbox"" value=""true"" ");
                    EndContext();
                    BeginContext(28821, 62, false);
#line 625 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                                                                                     Write(Model.Item2.isPastBone == "true" ? "checked=\" checked\"" : "");

#line default
#line hidden
                    EndContext();
                    BeginContext(28884, 267, true);
                    WriteLiteral(@" onclick=""SetPast(this)"" />
                                                others, specify:
                                            </td>
                                            <td valign=top class=""level2b"">
                                                ");
                    EndContext();
                    BeginContext(29152, 129, false);
#line 629 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                           Write(Html.TextArea("PastOther", Model.Item2.PastOther, 3, 43, new { @class = "", onkeyup = "AutoCheck(this,isPastOther,isPastGood)" }));

#line default
#line hidden
                    EndContext();
                    BeginContext(29281, 546, true);
                    WriteLiteral(@"
                                            </td>
                                        </tr>

                                        <tr><td colspan=""3"" class=""line""></td></tr>

                                        <tr>
                                            <td valign=top rowspan=""2"" class=""level2"">Medication</td>
                                            <td valign=top class=""level2a"" colspan=""2"">
                                                <input id=""isMedicationNil"" name=""isMedicationNil"" type=""checkbox"" value=""true"" ");
                    EndContext();
                    BeginContext(29829, 67, false);
#line 638 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                                                                                            Write(Model.Item2.isMedicationNil == "true" ? "checked=\" checked\"" : "");

#line default
#line hidden
                    EndContext();
                    BeginContext(29897, 428, true);
                    WriteLiteral(@" onclick=""SetMedication(this)"" />
                                                nil
                                            </td>
                                        </tr>
                                        <tr>
                                            <td valign=top class=""level2a"">
                                                <input id=""isMedicationNil"" name=""isMedication"" type=""checkbox"" value=""true"" ");
                    EndContext();
                    BeginContext(30327, 64, false);
#line 644 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                                                                                         Write(Model.Item2.isMedication == "true" ? "checked=\" checked\"" : "");

#line default
#line hidden
                    EndContext();
                    BeginContext(30392, 270, true);
                    WriteLiteral(@" onclick=""SetMedication(this)"" />
                                                yes, specify:
                                            </td>
                                            <td valign=top class=""level2a"">
                                                ");
                    EndContext();
                    BeginContext(30663, 137, false);
#line 648 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                           Write(Html.TextArea("Medication", Model.Item2.Medication, 3, 43, new { @class = "", onkeyup = "AutoCheck(this,isMedication,isMedicationNil)" }));

#line default
#line hidden
                    EndContext();
                    BeginContext(30800, 544, true);
                    WriteLiteral(@"
                                            </td>
                                        </tr>

                                        <tr><td colspan=""3"" class=""line""></td></tr>

                                        <tr>
                                            <td valign=top rowspan=""2"" class=""level2"">Previous operation</td>
                                            <td valign=top class=""level2b"" colspan=""2"">
                                                <input id=""isPreOpNil"" name=""isPreOpNil"" type=""checkbox"" value=""true"" ");
                    EndContext();
                    BeginContext(31346, 62, false);
#line 657 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                                                                                  Write(Model.Item2.isPreOpNil == "true" ? "checked=\" checked\"" : "");

#line default
#line hidden
                    EndContext();
                    BeginContext(31409, 410, true);
                    WriteLiteral(@" onclick=""SetPreOp(this)"" />
                                                nil
                                            </td>
                                        </tr>
                                        <tr>
                                            <td valign=top class=""level2b"">
                                                <input id=""isPreOp"" name=""isPreOp"" type=""checkbox"" value=""true"" ");
                    EndContext();
                    BeginContext(31821, 59, false);
#line 663 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                                                                            Write(Model.Item2.isPreOp == "true" ? "checked=\" checked\"" : "");

#line default
#line hidden
                    EndContext();
                    BeginContext(31881, 265, true);
                    WriteLiteral(@" onclick=""SetPreOp(this)"" />
                                                yes, specify:
                                            </td>
                                            <td valign=top class=""level2b"">
                                                ");
                    EndContext();
                    BeginContext(32147, 117, false);
#line 667 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                           Write(Html.TextArea("PreOp", Model.Item2.PreOp, 3, 43, new { @class = "", onkeyup = "AutoCheck(this,isPreOp,isPreOpNil)" }));

#line default
#line hidden
                    EndContext();
                    BeginContext(32264, 536, true);
                    WriteLiteral(@"
                                            </td>
                                        </tr>

                                        <tr><td colspan=""3"" class=""line""></td></tr>
                                        <tr>
                                            <td valign=top rowspan=""2"" class=""level2"">Allergy</td>
                                            <td valign=top class=""level2a"" colspan=""2"">
                                                <input id=""isAllergyNil"" name=""isAllergyNil"" type=""checkbox"" value=""true"" ");
                    EndContext();
                    BeginContext(32802, 64, false);
#line 675 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                                                                                      Write(Model.Item2.isAllergyNil == "true" ? "checked=\" checked\"" : "");

#line default
#line hidden
                    EndContext();
                    BeginContext(32867, 416, true);
                    WriteLiteral(@" onclick=""SetAllergy(this)"" />
                                                nil
                                            </td>
                                        </tr>
                                        <tr>
                                            <td valign=top class=""level2a"">
                                                <input id=""isAllergy"" name=""isAllergy"" type=""checkbox"" value=""true"" ");
                    EndContext();
                    BeginContext(33285, 61, false);
#line 681 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                                                                                Write(Model.Item2.isAllergy == "true" ? "checked=\" checked\"" : "");

#line default
#line hidden
                    EndContext();
                    BeginContext(33347, 269, true);
                    WriteLiteral(@" onclick=""SetAllergy(this)"" />
                                                yes, specify:
                                            </td>


                                            <td valign=top class=""level2a"">
                                                ");
                    EndContext();
                    BeginContext(33617, 125, false);
#line 687 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                           Write(Html.TextArea("Allergy", Model.Item2.Allergy, 3, 43, new { @class = "", onkeyup = "AutoCheck(this,isAllergy,isAllergyNil)" }));

#line default
#line hidden
                    EndContext();
                    BeginContext(33742, 998, true);
                    WriteLiteral(@"
                                            </td>
                                        </tr>

                                        <tr><td class=""blank""></td></tr>

                                        <tr>
                                            <td class=""level1""><a name=Physical>&nbsp; Physical Examination</td>
                                            <td class=""level1"" colspan=""2"">  <input type=button value=""Set Normal"" onclick=""SetNormal();""> - Mark all items below (except inspection) as normal</td>
                                        </tr>
                                        <tr><td colspan=""3"" class=""line""></td></tr>
                                        <tr>
                                            <td valign=top class=""level2"" rowspan=""5"">General</td>
                                            <td class=""level2b"" colspan=""2"">
                                                <input id=""isGenNormal"" name=""isGenNormal"" type=""checkbox"" value=""true"" ");
                    EndContext();
                    BeginContext(34742, 63, false);
#line 701 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                                                                                    Write(Model.Item2.isGenNormal == "true" ? "checked=\" checked\"" : "");

#line default
#line hidden
                    EndContext();
                    BeginContext(34806, 402, true);
                    WriteLiteral(@" onclick=""SetGen(this)"" />
                                                normal
                                            </td>
                                        </tr>
                                        <tr>
                                            <td class=""level2b"">
                                                <input id=""isGenLeg"" name=""isGenLeg"" type=""checkbox"" value=""true"" ");
                    EndContext();
                    BeginContext(35210, 60, false);
#line 707 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                                                                              Write(Model.Item2.isGenLeg == "true" ? "checked=\" checked\"" : "");

#line default
#line hidden
                    EndContext();
                    BeginContext(35271, 306, true);
                    WriteLiteral(@" onclick=""SetGen(this)"" />
                                                leg length discrepancy,<br>&nbsp; &nbsp; &nbsp; specify:
                                            </td>
                                            <td valign=top class=""level2b"">
                                                ");
                    EndContext();
                    BeginContext(35578, 121, false);
#line 711 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                           Write(Html.TextArea("GenLeg", Model.Item2.GenLeg, 3, 42, new { @class = "", onkeyup = "AutoCheck(this,isGenLeg,isGenNormal)" }));

#line default
#line hidden
                    EndContext();
                    BeginContext(35699, 321, true);
                    WriteLiteral(@"
                                            </td>
                                        </tr>
                                        <tr>
                                            <td class=""level2b"">
                                                <input id=""isGenDys"" name=""isGenDys"" type=""checkbox"" value=""true"" ");
                    EndContext();
                    BeginContext(36022, 60, false);
#line 716 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                                                                              Write(Model.Item2.isGenDys == "true" ? "checked=\" checked\"" : "");

#line default
#line hidden
                    EndContext();
                    BeginContext(36083, 302, true);
                    WriteLiteral(@" onclick=""SetGen(this)"" />
                                                dysmorphic feature,<br>&nbsp; &nbsp; &nbsp; specify:
                                            </td>
                                            <td valign=top class=""level2b"">
                                                ");
                    EndContext();
                    BeginContext(36386, 121, false);
#line 720 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                           Write(Html.TextArea("GenDys", Model.Item2.GenDys, 3, 42, new { @class = "", onkeyup = "AutoCheck(this,isGenDys,isGenNormal)" }));

#line default
#line hidden
                    EndContext();
                    BeginContext(36507, 323, true);
                    WriteLiteral(@"
                                            </td>
                                        </tr>
                                        <tr>
                                            <td class=""level2b"">
                                                <input id=""isGenSkin"" name=""isGenSkin"" type=""checkbox"" value=""true"" ");
                    EndContext();
                    BeginContext(36832, 61, false);
#line 725 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                                                                                Write(Model.Item2.isGenSkin == "true" ? "checked=\" checked\"" : "");

#line default
#line hidden
                    EndContext();
                    BeginContext(36894, 368, true);
                    WriteLiteral(@" onclick=""SetGen(this)"" />
                                                abnormal skin <br>&nbsp; &nbsp; &nbsp; pigmentation, specify:
                                            </td>
                                            <td valign=top class=""level2b"">

                                                <input type=""text"" size=""42"" name=""GenSkin"" id=""GenSkin""");
                    EndContext();
                    BeginWriteAttribute("value", " value=\'", 37262, "\'", 37290, 1);
#line 730 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
WriteAttributeValue("", 37270, Model.Item2.GenSkin, 37270, 20, false);

#line default
#line hidden
                    EndWriteAttribute();
                    BeginContext(37291, 385, true);
                    WriteLiteral(@" onkeyup=""AutoCheck(this,isGenSkin,isGenNormal)"">
                                            </td>
                                        </tr>
                                        <tr>
                                            <td valign=top class=""level2b"">
                                                <input id=""isGenOther"" name=""isGenOther"" type=""checkbox"" value=""true"" ");
                    EndContext();
                    BeginContext(37678, 62, false);
#line 735 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                                                                                  Write(Model.Item2.isGenOther == "true" ? "checked=\" checked\"" : "");

#line default
#line hidden
                    EndContext();
                    BeginContext(37741, 266, true);
                    WriteLiteral(@" onclick=""SetGen(this)"" />
                                                others, specify:
                                            </td>
                                            <td valign=top class=""level2b"">
                                                ");
                    EndContext();
                    BeginContext(38008, 127, false);
#line 739 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                           Write(Html.TextArea("GenOther", Model.Item2.GenOther, 3, 43, new { @class = "", onkeyup = "AutoCheck(this,isGenOther,isGenNormal)" }));

#line default
#line hidden
                    EndContext();
                    BeginContext(38135, 757, true);
                    WriteLiteral(@"

                                            </td>

                                        </tr>

                                        <tr>
                                            <td class=""level1"" colspan=""3"">&nbsp; Back</td>
                                        </tr>
                                        <tr><td colspan=""3"" class=""line""></td></tr>
                                        <tr>
                                            <td valign=top class=""level2"" rowspan=6><a name=""Inspection"">Inspection</td>
                                            <td valign=top class=""level2a"" colspan=""2"">
                                                <input id=""isBackInspectNormal"" name=""isBackInspectNormal"" type=""checkbox"" value=""true"" ");
                    EndContext();
                    BeginContext(38894, 71, false);
#line 752 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                                                                                                    Write(Model.Item2.isBackInspectNormal == "true" ? "checked=\" checked\"" : "");

#line default
#line hidden
                    EndContext();
                    BeginContext(38966, 437, true);
                    WriteLiteral(@" onclick=""SetBackInspect(this)"" />
                                                normal
                                            </td>
                                        </tr>
                                        <tr>
                                            <td valign=top class=""level2a"">
                                                <input id=""isBackInspectAsy"" name=""isBackInspectAsy"" type=""checkbox"" value=""true"" ");
                    EndContext();
                    BeginContext(39405, 68, false);
#line 758 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                                                                                              Write(Model.Item2.isBackInspectAsy == "true" ? "checked=\" checked\"" : "");

#line default
#line hidden
                    EndContext();
                    BeginContext(39474, 365, true);
                    WriteLiteral(@" onclick=""SetBackInspect(this)"" />
                                                asymmetrical shoulder:
                                            </td>

                                            <td valign=top class=""level2a"">
                                                <input id=""isBackInspectAsyL"" name=""isBackInspectAsyL"" type=""checkbox"" value=""true"" ");
                    EndContext();
                    BeginContext(39841, 69, false);
#line 763 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                                                                                                Write(Model.Item2.isBackInspectAsyL == "true" ? "checked=\" checked\"" : "");

#line default
#line hidden
                    EndContext();
                    BeginContext(39911, 148, true);
                    WriteLiteral(" /> left higher\n                                                <input id=\"isBackInspectAsyR\" name=\"isBackInspectAsyR\" type=\"checkbox\" value=\"true\" ");
                    EndContext();
                    BeginContext(40061, 69, false);
#line 764 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                                                                                                Write(Model.Item2.isBackInspectAsyR == "true" ? "checked=\" checked\"" : "");

#line default
#line hidden
                    EndContext();
                    BeginContext(40131, 364, true);
                    WriteLiteral(@" /> right higher
                                            </td>
                                        </tr>
                                        <tr>
                                            <td valign=top class=""level2a"">
                                                <input id=""isBackInspectRib"" name=""isBackInspectRib"" type=""checkbox"" value=""true"" ");
                    EndContext();
                    BeginContext(40497, 68, false);
#line 769 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                                                                                              Write(Model.Item2.isBackInspectRib == "true" ? "checked=\" checked\"" : "");

#line default
#line hidden
                    EndContext();
                    BeginContext(40566, 345, true);
                    WriteLiteral(@" onclick=""SetBackInspect(this)"" />
                                                Rib
                                            </td>
                                            <td valign=top class=""level2a"">
                                                <input id=""isBackInspectRibL"" name=""isBackInspectRibL"" type=""checkbox"" value=""true"" ");
                    EndContext();
                    BeginContext(40913, 69, false);
#line 773 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                                                                                                Write(Model.Item2.isBackInspectRibL == "true" ? "checked=\" checked\"" : "");

#line default
#line hidden
                    EndContext();
                    BeginContext(40983, 216, true);
                    WriteLiteral(" onclick=\"SetChecked(this)\" />\n                                                left\n                                                <input id=\"isBackInspectRibR\" name=\"isBackInspectRibR\" type=\"checkbox\" value=\"true\" ");
                    EndContext();
                    BeginContext(41201, 69, false);
#line 775 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                                                                                                Write(Model.Item2.isBackInspectRibR == "true" ? "checked=\" checked\"" : "");

#line default
#line hidden
                    EndContext();
                    BeginContext(41271, 438, true);
                    WriteLiteral(@" onclick=""SetChecked(this)"" />
                                                right
                                            </td>
                                        </tr>
                                        <tr>
                                            <td valign=top class=""level2a"">
                                                <input id=""isBackInspectLumbar"" name=""isBackInspectLumbar"" type=""checkbox"" value=""true"" ");
                    EndContext();
                    BeginContext(41711, 71, false);
#line 781 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                                                                                                    Write(Model.Item2.isBackInspectLumbar == "true" ? "checked=\" checked\"" : "");

#line default
#line hidden
                    EndContext();
                    BeginContext(41783, 366, true);
                    WriteLiteral(@" onclick=""SetBackInspect(this)"" />
                                                lumbar prominence:
                                            </td>
                                            <td valign=top class=""level2a"">
                                                <input id=""isBackInspectLumbarL"" name=""isBackInspectLumbarL"" type=""checkbox"" value=""true"" ");
                    EndContext();
                    BeginContext(42151, 72, false);
#line 785 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                                                                                                      Write(Model.Item2.isBackInspectLumbarL == "true" ? "checked=\" checked\"" : "");

#line default
#line hidden
                    EndContext();
                    BeginContext(42224, 195, true);
                    WriteLiteral(" />\n                                                left\n                                                <input id=\"isBackInspectLumbarR\" name=\"isBackInspectLumbarR\" type=\"checkbox\" value=\"true\" ");
                    EndContext();
                    BeginContext(42421, 72, false);
#line 787 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                                                                                                      Write(Model.Item2.isBackInspectLumbarR == "true" ? "checked=\" checked\"" : "");

#line default
#line hidden
                    EndContext();
                    BeginContext(42494, 406, true);
                    WriteLiteral(@" />
                                                right
                                            </td>
                                        </tr>
                                        <tr>
                                            <td valign=top class=""level2a"">

                                                <input id=""isBackPelvisTilt"" name=""isBackPelvisTilt"" type=""checkbox"" value=""true"" ");
                    EndContext();
                    BeginContext(42902, 68, false);
#line 794 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                                                                                              Write(Model.Item2.isBackPelvisTilt == "true" ? "checked=\" checked\"" : "");

#line default
#line hidden
                    EndContext();
                    BeginContext(42971, 355, true);
                    WriteLiteral(@" onclick=""SetBackInspect(this)"" />

                                                pelvis tilt:
                                            </td>
                                            <td valign=top class=""level2a"">
                                                <input id=""isBackPelvisTiltL"" name=""isBackPelvisTiltL"" type=""checkbox"" value=""true"" ");
                    EndContext();
                    BeginContext(43328, 69, false);
#line 799 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                                                                                                Write(Model.Item2.isBackPelvisTiltL == "true" ? "checked=\" checked\"" : "");

#line default
#line hidden
                    EndContext();
                    BeginContext(43398, 196, true);
                    WriteLiteral(" />\n                                                left higher\n                                                <input id=\"isBackPelvisTiltR\" name=\"isBackPelvisTiltR\" type=\"checkbox\" value=\"true\" ");
                    EndContext();
                    BeginContext(43596, 69, false);
#line 801 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                                                                                                Write(Model.Item2.isBackPelvisTiltR == "true" ? "checked=\" checked\"" : "");

#line default
#line hidden
                    EndContext();
                    BeginContext(43666, 416, true);
                    WriteLiteral(@" />
                                                right higher
                                            </td>
                                        </tr>
                                        <tr>
                                            <td valign=top class=""level2a"">
                                                <input id=""isBackInspectOther"" name=""isBackInspectOther"" type=""checkbox"" value=""true"" ");
                    EndContext();
                    BeginContext(44084, 70, false);
#line 807 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                                                                                                  Write(Model.Item2.isBackInspectOther == "true" ? "checked=\" checked\"" : "");

#line default
#line hidden
                    EndContext();
                    BeginContext(44155, 274, true);
                    WriteLiteral(@" onclick=""SetBackInspect(this)"" />
                                                others, specify:
                                            </td>
                                            <td valign=top class=""level2a"">
                                                ");
                    EndContext();
                    BeginContext(44430, 159, false);
#line 811 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                           Write(Html.TextArea("BackInspectOther", Model.Item2.BackInspectOther, 1, 42, new { @class = "", onkeyup = "AutoCheck(this,isBackInspectOther,isBackInspectNormal)" }));

#line default
#line hidden
                    EndContext();
                    BeginContext(44589, 557, true);
                    WriteLiteral(@"
                                            </td>
                                        </tr>

                                        <tr><td colspan=""3"" class=""line""></td></tr>

                                        <tr>
                                            <td valign=top class=""level2"" rowspan=""2"">Palpation</td>
                                            <td valign=top class=""level2b"" colspan=""2"">
                                                <input id=""isBackPalpationNormal"" name=""isBackPalpationNormal"" type=""checkbox"" value=""true"" ");
                    EndContext();
                    BeginContext(45148, 73, false);
#line 820 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                                                                                                        Write(Model.Item2.isBackPalpationNormal == "true" ? "checked=\" checked\"" : "");

#line default
#line hidden
                    EndContext();
                    BeginContext(45222, 475, true);
                    WriteLiteral(@" onclick=""SetBackPalpation(this)"" />
                                                normal, non-tender, no spasm
                                            </td>
                                        </tr>
                                        <tr>
                                            <td valign=top class=""level2b"">
                                                <input id=""isBackPalpationAbnormal"" name=""isBackPalpationAbnormal"" type=""checkbox"" value=""true"" ");
                    EndContext();
                    BeginContext(45699, 75, false);
#line 826 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                                                                                                            Write(Model.Item2.isBackPalpationAbnormal == "true" ? "checked=\" checked\"" : "");

#line default
#line hidden
                    EndContext();
                    BeginContext(45775, 230, true);
                    WriteLiteral(" onclick=\"SetBackPalpation(this)\" /> abnormal, specify:\n                                            </td>\n                                            <td valign=top class=\"level2b\">\n                                                ");
                    EndContext();
                    BeginContext(46006, 176, false);
#line 829 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                           Write(Html.TextArea("BackPalpationAbnormal", Model.Item2.BackPalpationAbnormal, 1, 42, new { @class = "", onkeyup = "AutoCheck(this,isBackPalpationAbnormal,isBackPalpationNormal)" }));

#line default
#line hidden
                    EndContext();
                    BeginContext(46182, 558, true);
                    WriteLiteral(@"

                                            </td>
                                        </tr>

                                        <tr><td colspan=""3"" class=""line""></td></tr>

                                        <tr>
                                            <td valign=top class=""level2"" rowspan=""5"">Range of movement</td>
                                            <td valign=top class=""level2a"" colspan=""2"">
                                                <input id=""isBackRangeNormal"" name=""isBackRangeNormal"" type=""checkbox"" value=""true"" ");
                    EndContext();
                    BeginContext(46742, 69, false);
#line 839 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                                                                                                Write(Model.Item2.isBackRangeNormal == "true" ? "checked=\" checked\"" : "");

#line default
#line hidden
                    EndContext();
                    BeginContext(46812, 381, true);
                    WriteLiteral(@" onclick=""SetBackRange(this)"" /> normal
                                            </td>
                                        </tr>
                                        <tr>
                                            <td valign=top class=level2a>
                                                <input id=""isBackRangeDys"" name=""isBackRangeDys"" type=""checkbox"" value=""true"" ");
                    EndContext();
                    BeginContext(47195, 66, false);
#line 844 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                                                                                          Write(Model.Item2.isBackRangeDys == "true" ? "checked=\" checked\"" : "");

#line default
#line hidden
                    EndContext();
                    BeginContext(47262, 180, true);
                    WriteLiteral(" onclick=\"SetBackRange(this)\" /> Dysrthymic, specify:\n                                            </td>\n                                            <td valign=top class=\"level2a\"> ");
                    EndContext();
                    BeginContext(47443, 145, false);
#line 846 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                                       Write(Html.TextArea("BackRangeDys", Model.Item2.BackRangeDys, 3, 43, new { @class = "", onkeyup = "AutoCheck(this,isBackRangeDys,isBackRangeNormal)" }));

#line default
#line hidden
                    EndContext();
                    BeginContext(47588, 1245, true);
                    WriteLiteral(@"</td>
                                        </tr>
                                        <tr>
                                            <td valign=top class=""level2a"" colspan=""2"">
                                                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Modified Schober Test:
                                                <table align=center border=""0"" background=#000000 cellspacing=""1"" cellpadding=""0"">
                                                    <tr>
                                                        <td class=""level2a"">Standing:</td>
                                                        <td class=""level2a"">5cm</td>
                                                        <td class=""level2a"">10cm</td>
                                                        <td class=""level2a"">15cm</td>
                                                    </tr>
                                                    <tr>
                                                      ");
                    WriteLiteral("  <td class=\"level2a\">Flexion - cm increased:</td>\n                                                        <td class=\"level2a\"><input name=\"BackRangeSchober5\" type=\"text\" onkeyup=\"RestrictFloat(this)\" onchange=\"\" size=\"2\"");
                    EndContext();
                    BeginWriteAttribute("value", " value=\"", 48833, "\"", 48871, 1);
#line 860 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
WriteAttributeValue("", 48841, Model.Item2.BackRangeSchober5, 48841, 30, false);

#line default
#line hidden
                    EndWriteAttribute();
                    BeginContext(48872, 180, true);
                    WriteLiteral(">cm</td>\n                                                        <td class=\"level2a\"><input name=\"BackRangeSchober10\" type=\"text\" onkeyup=\"RestrictFloat(this)\" onchange=\"\" size=\"2\"");
                    EndContext();
                    BeginWriteAttribute("value", " value=\"", 49052, "\"", 49091, 1);
#line 861 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
WriteAttributeValue("", 49060, Model.Item2.BackRangeSchober10, 49060, 31, false);

#line default
#line hidden
                    EndWriteAttribute();
                    BeginContext(49092, 180, true);
                    WriteLiteral(">cm</td>\n                                                        <td class=\"level2a\"><input name=\"BackRangeSchober15\" type=\"text\" onkeyup=\"RestrictFloat(this)\" onchange=\"\" size=\"2\"");
                    EndContext();
                    BeginWriteAttribute("value", " value=\"", 49272, "\"", 49311, 1);
#line 862 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
WriteAttributeValue("", 49280, Model.Item2.BackRangeSchober15, 49280, 31, false);

#line default
#line hidden
                    EndWriteAttribute();
                    BeginContext(49312, 489, true);
                    WriteLiteral(@">cm</td>
                                                    </tr>
                                                </table>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td valign=top class=""level2a"" colspan=""2"">
                                                <input id=""isBackRangeAbnormal"" name=""isBackRangeAbnormal"" type=""checkbox"" value=""true"" ");
                    EndContext();
                    BeginContext(49803, 71, false);
#line 869 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                                                                                                    Write(Model.Item2.isBackRangeAbnormal == "true" ? "checked=\" checked\"" : "");

#line default
#line hidden
                    EndContext();
                    BeginContext(49875, 725, true);
                    WriteLiteral(@" />
                                                abnormal, specify:
                                            </td>
                                        </tr>
                                        <tr>
                                            <td valign=top class=""level2a"" colspan=""2"">
                                                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; forward flexion: finger to
                                                <input type=""text""
                                                       id=""BackRangeForward""
                                                       name=""BackRangeForward""
                                                       size=""25""");
                    EndContext();
                    BeginWriteAttribute("value", "\n                                                       value=\"", 50600, "\"", 50692, 1);
#line 880 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
WriteAttributeValue("", 50663, Model.Item2.BackRangeForward, 50663, 29, false);

#line default
#line hidden
                    EndWriteAttribute();
                    BeginContext(50693, 555, true);
                    WriteLiteral(@"
                                                       placeholder="""">
                                                <br>
                                                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; side flexion: finger to &nbsp; &nbsp;
                                                <input type=""text""
                                                       id=""BackRangeSide""
                                                       name=""BackRangeSide""
                                                       size=""25""");
                    EndContext();
                    BeginWriteAttribute("value", "\n                                                       value=\"", 51248, "\"", 51337, 1);
#line 888 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
WriteAttributeValue("", 51311, Model.Item2.BackRangeSide, 51311, 26, false);

#line default
#line hidden
                    EndWriteAttribute();
                    BeginContext(51338, 627, true);
                    WriteLiteral(@"
                                                       placeholder="""">
                                            </td>
                                        </tr>

                                        <tr><td colspan=""3"" class=""line""></td></tr>

                                        <tr>
                                            <td valign=top class=""level2"" rowspan=""2"">Straight leg raising</td>
                                            <td valign=top class=""level2b"" colspan=""2"">
                                                <input id=""isBackLegNormal"" name=""isBackLegNormal"" type=""checkbox"" value=""true"" ");
                    EndContext();
                    BeginContext(51967, 67, false);
#line 898 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                                                                                            Write(Model.Item2.isBackLegNormal == "true" ? "checked=\" checked\"" : "");

#line default
#line hidden
                    EndContext();
                    BeginContext(52035, 398, true);
                    WriteLiteral(@" onclick=""SetBackLeg(this)"" /> normal both sides
                                            </td>
                                        </tr>
                                        <tr>
                                            <td valign=top class=""level2b"">
                                                <input id=""isBackLegAbnormal"" name=""isBackLegAbnormal"" type=""checkbox"" value=""true"" ");
                    EndContext();
                    BeginContext(52435, 69, false);
#line 903 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                                                                                                Write(Model.Item2.isBackLegAbnormal == "true" ? "checked=\" checked\"" : "");

#line default
#line hidden
                    EndContext();
                    BeginContext(52505, 223, true);
                    WriteLiteral(" onclick=\"SetBackLeg(this)\" />abnormal, specify:\n                                            </td>\n                                            <td valign=top class=\"level2b\">\n                                                ");
                    EndContext();
                    BeginContext(52729, 152, false);
#line 906 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                           Write(Html.TextArea("BackLegAbnormal", Model.Item2.BackLegAbnormal, 5, 43, new { @class = "", onkeyup = "AutoCheck(this,isBackLegAbnormal,isBackLegNormal)" }));

#line default
#line hidden
                    EndContext();
                    BeginContext(52881, 877, true);
                    WriteLiteral(@"

                                            </td>
                                        </tr>

                                        <tr><td colspan=""3"" class=""line""></td></tr>

                                        <tr>
                                            <td valign=top class=""level2"" rowspan=""2"">Neurology of lower limb</td>
                                            <td valign=top class=""level2a"" colspan=""2"">
                                                normal motor, reflex, sensation, coordination
                                            </td>
                                        </tr>
                                        <tr>
                                            <td valign=top class=""level2a"">
                                                <input id=""isBackLimbAbnormal"" name=""isBackLimbAbnormal"" type=""checkbox"" value=""true"" ");
                    EndContext();
                    BeginContext(53760, 70, false);
#line 921 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                                                                                                  Write(Model.Item2.isBackLimbAbnormal == "true" ? "checked=\" checked\"" : "");

#line default
#line hidden
                    EndContext();
                    BeginContext(53831, 273, true);
                    WriteLiteral(@" onclick=""SetBackLimb(this)"" />
                                                abnormal, specify:
                                            </td>
                                            <td valign=top class=""level2a"">
                                                ");
                    EndContext();
                    BeginContext(54105, 156, false);
#line 925 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                           Write(Html.TextArea("BackLimbAbnormal", Model.Item2.BackLimbAbnormal, 3, 43, new { @class = "", onkeyup = "AutoCheck(this,isBackLimbAbnormal,isBackLimbNormal)" }));

#line default
#line hidden
                    EndContext();
                    BeginContext(54261, 440, true);
                    WriteLiteral(@"
                                            </td>
                                        </tr>

                                        <tr><td colspan=""3"" class=""line""></td></tr>

                                        <tr>
                                            <td valign=top class=""level2"">Remarks</td>
                                            <td class=""level2a"" colspan=""2"">
                                                ");
                    EndContext();
                    BeginContext(54702, 73, false);
#line 934 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                           Write(Html.TextArea("Remarks", Model.Item2.Remarks, 5, 90, new { @class = "" }));

#line default
#line hidden
                    EndContext();
                    BeginContext(54775, 11864, true);
                    WriteLiteral(@"
                                                <table>
                                                    <tr><td style=""color: #000; font-size: 11px;"" colspan=4>Template Remarks:</td></tr>
                                                    <tr>
                                                        <td style=""color: #000; vertical-align: top;"">
                                                            <span id=RemarkOptionsToggler1 onclick=""ToggleRemarkOptions1()""><u style=""cursor: hand; font-size: 11px;"">Initial Visit</u></span>
                                                            <div id=RemarkOptions1 style=""display:none"">
                                                                <table class=""choice"" border=""0"" cellspacing=""1"" color=""#000"">
                                                                    <tr><td class=""choice"" onclick=""AddRemarks('Physiotherapy is offered;')"">Physiotherapy is offered;</td></tr>
                                                                    <tr");
                    WriteLiteral(@"><td class=""choice"" onclick=""AddRemarks('Scoliosis advice is given;')"">Scoliosis advice is given;</td></tr>
                                                                    <tr><td class=""choice"" onclick=""AddRemarks('Pregnancy alert with xray;')"">Pregnancy alert with xray;</td></tr>
                                                                </table>
                                                            </div>
                                                        </td>
                                                        <td style=""color: #000; vertical-align: top;"">
                                                            <span id=RemarkOptionsToggler2 onclick=""ToggleRemarkOptions2()""><u style=""cursor: hand; font-size: 11px;"">Investigation</u></span>
                                                            <div id=RemarkOptions2 style=""display:none"">
                                                                <table class=""choice"" border=""0"" cellspacing=""1"" color=""#000"">
         ");
                    WriteLiteral(@"                                                           <tr><td class=""choice"" onclick=""AddRemarks('MRI spine booked;')"">MRI spine booked;</td></tr>
                                                                    <tr><td class=""choice"" onclick=""AddRemarks('U/S abdomen booked;')"">U/S abdomen booked;</td></tr>
                                                                    <tr><td class=""choice"" onclick=""AddRemarks('XRay scannogram to check leg length discrepancy;')"">XRay scannogram to check leg length discrepancy;</td></tr>
                                                                    <tr><td class=""choice"" onclick=""AddRemarks('XRay cone view on thoracic spine (AP,lateral);')"">XRay cone view on thoracic spine (AP,lateral);</td></tr>
                                                                    <tr><td class=""choice"" onclick=""AddRemarks('XRay cone view on lumbar spine (AP,lateral);')"">XRay cone view on lumbar spine (AP,lateral);</td></tr>
                                                  ");
                    WriteLiteral(@"              </table>
                                                            </div>
                                                        </td>
                                                        <td style=""color: #000; vertical-align: top;"">
                                                            <span id=RemarkOptionsToggler3 onclick=""ToggleRemarkOptions3()""><u style=""cursor: hand; font-size: 11px;"">Bracing</u></span>
                                                            <div id=RemarkOptions3 style=""display:none"">
                                                                <table class=""choice"" border=""0"" cellspacing=""1"" color=""#000"">
                                                                    <tr><td class=""choice"" onclick=""AddRemarks('Bracing will be started;')"">Bracing will be started;</td></tr>
                                                                    <tr><td class=""choice"" onclick=""AddRemarks('Patient has been informed the following:')"">Patient has been info");
                    WriteLiteral(@"rmed the following:</td></tr>
                                                                    <tr><td class=""choice"" onclick=""AddRemarks('Risk of curve progression;')"">&nbsp; &nbsp;Risk of curve progression;</td></tr>
                                                                    <tr><td class=""choice"" onclick=""AddRemarks('Need to wear brace 23 hrs per day;')"">&nbsp; &nbsp;Need to wear brace 23 hrs per day;</td></tr>
                                                                    <tr><td class=""choice"" onclick=""AddRemarks('Bracing will be continue until skeletal maturity;')"">&nbsp; &nbsp;Bracing will be continue until skeletal maturity;</td></tr>
                                                                    <tr><td class=""choice"" onclick=""AddRemarks('P&O form is completed;')"">&nbsp; &nbsp;P&O form is completed;</td></tr>
                                                                    <tr><td class=""choice"" onclick=""AddRemarks('Notify us in case no contact for brace fitting within 1 mont");
                    WriteLiteral(@"h;')"">&nbsp; &nbsp;Notify us in case no contact for brace fitting within 1 month;</td></tr>
                                                                    <tr><td class=""choice"" onclick=""AddRemarks('Bracing weaning begins today;')"">Bracing weaning begins today;</td></tr>
                                                                    <tr><td class=""choice"" onclick=""AddRemarks('7:00am-10:00pm for 6 months;')"">7:00am-10:00pm for 6 months;</td></tr>
                                                                    <tr><td class=""choice"" onclick=""AddRemarks('7:00am-5:00pm for another 6 months;')"">7:00am-5:00pm for another 6 months;</td></tr>
                                                                    <tr><td class=""choice"" onclick=""AddRemarks('Brace need adjustment;')"">Brace need adjustment;</td></tr>
                                                                </table>
                                                            </div>
                                                        ");
                    WriteLiteral(@"</td>
                                                        <td style=""color: #000; vertical-align: top;"">
                                                            <span id=RemarkOptionsToggler4 onclick=""ToggleRemarkOptions4()""><u style=""cursor: hand; font-size: 11px;"">Surgery</u></span>
                                                            <div id=RemarkOptions4 style=""display:none"">
                                                                <table class=""choice"" border=""0"" cellspacing=""1"" color=""#000"">
                                                                    <tr><td class=""choice"" onclick=""AddRemarks('Surgery is suggested;')"">Surgery is suggested;</td></tr>
                                                                    <tr><td class=""choice"" onclick=""AddRemarks('Patient & guardian has been informed the following:')"">Patient & guardian has been informed the following:</td></tr>
                                                                    <tr><td class=""choice"" onclick=""");
                    WriteLiteral(@"AddRemarks('Risk of curve progression;')"">&nbsp; &nbsp;Risk of curve progression;</td></tr>
                                                                    <tr><td class=""choice"" onclick=""AddRemarks('Nature & retionale of surgery;')"">&nbsp; &nbsp;Nature & retionale of surgery;</td></tr>
                                                                    <tr><td class=""choice"" onclick=""AddRemarks('Risk of general anesthesia;')"">&nbsp; &nbsp;Risk of general anesthesia;</td></tr>
                                                                    <tr><td class=""choice"" onclick=""AddRemarks('Risk of surgery for scoliosis;')"">&nbsp; &nbsp;Risk of surgery for scoliosis;</td></tr>
                                                                    <tr><td class=""choice"" onclick=""AddRemarks('MRI brain & whole spine are booked for pre--op workup;')"">MRI brain & whole spine are booked for pre--op workup;</td></tr>
                                                                    <tr><td class=""choice"" onclick=""Add");
                    WriteLiteral(@"Remarks('Admission slip & notification letter are given to patient;')"">Admission slip & notification letter are given to patient;</td></tr>
                                                                </table>
                                                            </div>
                                                        </td>
                                                        <td style=""color: #000; vertical-align: top;"">
                                                            <span id=RemarkOptionsToggler5 onclick=""ToggleRemarkOptions5()""><u style=""cursor: hand; font-size: 11px;"">Follow up</u></span>
                                                            <div id=RemarkOptions5 style=""display:none"">
                                                                <table class=""choice"" border=""0"" cellspacing=""1"" color=""#000"">
                                                                    <tr><td class=""choice"" onclick=""AddRemarks('Patient is asymptomatic;')"">Patient is asymptoma");
                    WriteLiteral(@"tic;</td></tr>
                                                                    <tr><td class=""choice"" onclick=""AddRemarks('No back tenderness;')"">No back tenderness;</td></tr>
                                                                    <tr><td class=""choice"" onclick=""AddRemarks('Both lower limbs have normal motor & sensory function;')"">Normal Motor & sensory function;</td></tr>
                                                                    <tr><td class=""choice"" onclick=""AddRemarks('No other abnorality detected from xray except scoliosis;')"">No other abnorality detected from xray except scoliosis;</td></tr>
                                                                </table>
                                                            </div>
                                                        </td>
                                                    </tr>
                                                </table>
                                            </td>
                         ");
                    WriteLiteral(@"               </tr>

                                        <tr><td colspan=""3"" class=""blank""></td></tr>


                                        <tr>
                                            <td colspan=""3"" align=center bgcolor=black style=""font-size:12pt; font-family:Arial;"">Please complete <b><font color=red>Personal Info. box</font></b> and <b><font color=red>New Visit Box</font></b>.</td>
                                        </tr>


                                        <tr><td colspan=""3"" class=""blank""></td></tr>
                                    </table>

                                </td>
                            </tr>
                        </table>
                    </div>

                </div>

                <input type=""submit"" name=""submit1"" id=""submit1"" value=""Save"" style=""display:none"" /><br><br>

                <DIV id=""MenuDiv"" STYLE=""position:absolute;left:10;top:10;width:110;"">

                    <input class=""MenuButton"" name=""update2"" type=""button"" value=""Upda");
                    WriteLiteral(@"te"" onClick=""ConfirmUpdate1()""><br><br>
                    <!--<input class=""MenuButton"" name=""update2"" type=""button"" value=""Update"" onClick=""ConfirmUpdate1()""><br><br>-->
                    <!--<input class=""MenuButton"" name=update3 type=""button"" value=""Update & Print"" onclick=""ConfirmUpdate2()""><br><br>-->

                    <input class=""MenuButton"" name=print2 type=""button"" value=""Print"" onClick=""Print()""><br><br>
                    <input class=""MenuButton"" name=trace type=""button"" value=""Trace Log"" onClick=""TraceModification()""><br><br>
                </DIV>
            </div>
    ");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_20);
                BeginAddHtmlAttributeValues(__tagHelperExecutionContext, "action", 2, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                AddHtmlAttributeValue("", 8610, "../Patient/InitAssessPage?scn=", 8610, 30, true);
#line 328 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
AddHtmlAttributeValue("", 8640, Model.Item2.SCN, 8640, 16, false);

#line default
#line hidden
                EndAddHtmlAttributeValues(__tagHelperExecutionContext);
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_21.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_21);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(66646, 58, true);
                WriteLiteral("\n\n\n    <div class=\"row\">\n        &nbsp;\n    </div>\n\n\n\n    ");
                EndContext();
                BeginContext(66704, 41, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "884f244d52ce456091cdc75185649f27", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_17);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(66745, 5, true);
                WriteLiteral("\n    ");
                EndContext();
                BeginContext(66750, 66, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "86feb1305fc34ac69236d962c4e1aac7", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_18);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(66816, 43, true);
                WriteLiteral("\n    <script>\n       var _isShowMessage = \'");
                EndContext();
                BeginContext(66860, 43, false);
#line 1051 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                        Write(Context.Session.GetString("_isShowMessage"));

#line default
#line hidden
                EndContext();
                BeginContext(66903, 64, true);
                WriteLiteral("\';\n                                        var _alertMessage = \'");
                EndContext();
                BeginContext(66968, 42, false);
#line 1052 "C:\Users\eddie\Desktop\Scoliosis-master\Scoliosis\Views\Patient\InitAssessPage.cshtml"
                                                        Write(Context.Session.GetString("_alertMessage"));

#line default
#line hidden
                EndContext();
                BeginContext(67010, 1719, true);
                WriteLiteral(@"';


        if (_isShowMessage == 'true' && _alertMessage != '') {

             $( ""#dialog"" ).dialog({
                                        autoOpen: true,
              modal: true,
              width: 500,
              height: 300,
              position: { my: ""center"", at: ""center"", of: window  },
              open: function() {
                        jQuery('.ui-widget-overlay').on('click', function() {
                            jQuery('#j_dialog').dialog('close');
                        })
                },

              buttons: {
                                            Ok: function () {

                      $.ajax({
                                                    method: ""post"",
                        url: ""./WebRemoveSession"",
                        error: function (xhr, status, err) {
                                                            alert(err);
                                                        }

                                                    }).done(");
                WriteLiteral(@"function (res) {

                                                    });
                  $( this ).dialog( ""close"" );
                                                }
                                            },
              show: {
                                            effect: ""fade"",
                duration: 10
              },
              hide: {
                                            effect: ""fade"",
                duration: 10
              }

                                        });


           $('#dialog').show().html(_alertMessage);

                                        //alert(_alertMessage);
                                    }

    </script>

    ");
                EndContext();
                BeginContext(68729, 70, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b8474eba4c204d929313d5b9ce9ecf03", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_22);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(68799, 5, true);
                WriteLiteral("\n    ");
                EndContext();
                BeginContext(68804, 61, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5b7d428d03c040428171e67fa3bac67f", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_23);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(68865, 5, true);
                WriteLiteral("\n    ");
                EndContext();
                BeginContext(68870, 65, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0e89c540cd994520aa386771ebd1f242", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_24);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(68935, 316, true);
                WriteLiteral(@"

    <script>
        function ConfirmUpdate1() {
            $(""#submit1"").button().click();
        }

    </script>

    <script>
        CreateStaticMenu(""MenuDiv"", document.body.offsetWidth - 120, 50);
    </script>
    <script src=""https://cdn.jsdelivr.net/picturefill/2.3.1/picturefill.min.js""></script>
    ");
                EndContext();
                BeginContext(69251, 49, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4b90839b57674926982d4c76d66e0cd5", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_25);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(69300, 5, true);
                WriteLiteral("\n    ");
                EndContext();
                BeginContext(69305, 48, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4052e3ff0794423b877b782d0454dfe8", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_26);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(69353, 1, true);
                WriteLiteral("\n");
                EndContext();
                BeginContext(69526, 9357, true);
                WriteLiteral(@"    <script type=""text/javascript"">
        $('#lightgallery').lightSlider({
            //    gallery:true,
            //    item:1,
            //    loop:true,
            //    thumbItem:9,
            //    slideMargin:0,
            //    enableDrag: false,
            //    currentPagerPosition:'left',
            //    onSliderLoad: function(el) {
            //        el.lightGallery({
            //            selector: '#lightgallery .lslide'
            //        });
            //    }
            //});
            //item: 1,
            //slideMargin: 0,
            //autowidth: true,
            //gallery: false,
            //loop: false,
            item: 10,
            gallery: false,
            slideMargin: 0,
            autowidth: true,
            addClass: '',
            hideControlOnEnd: true,
            loop: false,
            prevHtml: '<img src=""../images/prev.jpg"">',
            nextHtml: '<img src=""../images/next.jpg"">',
            onSliderLoad: function (el) {
            ");
                WriteLiteral(@"    el.lightGallery({
                    selector: '#lightgallery .lslide'
                });
            }
        });
        $('#lightgallery').lightGallery({
            share: false,
        });
        $('#lightgallery').on('onAfterOpen.lg', function (event) {
            //alert($('#lightgallery').data('lightGallery').$items.eq($('#lightgallery').data('lightGallery').index).data('src'));
            var myVariable = $('#lightgallery').data('lightGallery').$items.eq($('#lightgallery').data('lightGallery').index).data('src');
            var myVariable2 = $('#lightgallery').data('lightGallery').$items.eq($('#lightgallery').data('lightGallery').index).data('sub-html');
            window.open(""/measure/measure.html?imgdata="" + myVariable2 + ""&imgsrc="" + encodeURI(myVariable), ""mywindow"", ""scrollbars=yes,menubar=yes,resizable=yes,toolbar=yes,location=no,status=no');win.moveTo(0,0);win.resizeTo(window.screen.availWidth, window.screen.availHeight"");
            var hddgallery = document.getElementById('hdd");
                WriteLiteral(@"gallery');
            hddgallery.value = ""1"";
        });
        $('#lightgallery').on('onSlideClick.lg', function (event) {
            //alert($('#lightgallery').data('lightGallery').$items.eq($('#lightgallery').data('lightGallery').index).data('src'));
            var myVariable = $('#lightgallery').data('lightGallery').$items.eq($('#lightgallery').data('lightGallery').index).data('src');
            var myVariable2 = $('#lightgallery').data('lightGallery').$items.eq($('#lightgallery').data('lightGallery').index).data('sub-html');
            window.open(""/measure/measure.html?imgdata="" + myVariable2 + ""&imgsrc="" + encodeURI(myVariable), ""mywindow"", ""scrollbars=yes,menubar=yes,resizable=yes,toolbar=yes,location=no,status=no');win.moveTo(0,0);win.resizeTo(window.screen.availWidth, window.screen.availHeight"");
            var hddgallery = document.getElementById('hddgallery');
            hddgallery.value = ""1"";
        });
        $(document).ready(function () {
            if ($('#ThoKyphosis').val() == ");
                WriteLiteral(@"0) {
                $('#ThoKyphosis').val("""")
            }
            if ($('#LumLordosis').val() == 0) {
                $('#LumLordosis').val("""")
            }

            $('#lightgalleryxray').lightGallery({
                share: false,
            });
            $('#lightgalleryxray').on('onAfterOpen.lg', function (event) {
                //alert($('#lightgallery').data('lightGallery').$items.eq($('#lightgallery').data('lightGallery').index).data('src'));
                var myVariable = $('#lightgalleryxray').data('lightGallery').$items.eq($('#lightgalleryxray').data('lightGallery').index).data('src');
                var myVariable2 = $('#lightgalleryxray').data('lightGallery').$items.eq($('#lightgalleryxray').data('lightGallery').index).data('sub-html');
                window.open(""/measure/measure.html?imgdata="" + myVariable2 + ""&imgsrc="" + encodeURI(myVariable), ""mywindow"", ""scrollbars=yes,menubar=yes,resizable=yes,toolbar=yes,location=no,status=no');win.moveTo(0,0);win.resizeTo(window.scree");
                WriteLiteral(@"n.availWidth, window.screen.availHeight"");
                var hddgallery = document.getElementById('hddgallery');
                hddgallery.value = ""1"";
            });
            $('#lightgalleryxray').on('onSlideClick.lg', function (event) {
                //alert($('#lightgallery').data('lightGallery').$items.eq($('#lightgallery').data('lightGallery').index).data('src'));
                var myVariable = $('#lightgalleryxray').data('lightGallery').$items.eq($('#lightgalleryxray').data('lightGallery').index).data('src');
                var myVariable2 = $('#lightgalleryxray').data('lightGallery').$items.eq($('#lightgalleryxray').data('lightGallery').index).data('sub-html');
                window.open(""/measure/measure.html?imgdata="" + myVariable2 + ""&imgsrc="" + encodeURI(myVariable), ""mywindow"", ""scrollbars=yes,menubar=yes,resizable=yes,toolbar=yes,location=no,status=no');win.moveTo(0,0);win.resizeTo(window.screen.availWidth, window.screen.availHeight"");
                var hddgallery = document.getEl");
                WriteLiteral(@"ementById('hddgallery');
                hddgallery.value = ""1"";
            });
        });
        $(document).ready(function () {
            $('#lightgalleryexport').lightGallery({
                share: false,
            });
            $('#lightgalleryexport').on('onAfterOpen.lg', function (event) {
                var myVariable = $('#lightgalleryexport').data('lightGallery').$items.eq($('#lightgalleryexport').data('lightGallery').index).data('src');
                window.open(""/measure/measure.html?imgsrc="" + encodeURI(myVariable), ""mywindow"", ""scrollbars=yes,menubar=yes,resizable=yes,toolbar=yes,location=no,status=no');win.moveTo(0,0);win.resizeTo(window.screen.availWidth, window.screen.availHeight"");
            });
            $('#lightgalleryexport').on('onSlideClick.lg', function (event) {
                var myVariable = $('#lightgalleryexport').data('lightGallery').$items.eq($('#lightgalleryexport').data('lightGallery').index).data('src');
                window.open(""/measure/measure.html?im");
                WriteLiteral(@"gsrc="" + encodeURI(myVariable), ""mywindow"", ""scrollbars=yes,menubar=yes,resizable=yes,toolbar=yes,location=no,status=no');win.moveTo(0,0);win.resizeTo(window.screen.availWidth, window.screen.availHeight"");
            });
        });
        $(document).ready(function () {
            $('#lightgalleryexportxray').lightGallery({
                share: false,
            });
            $('#lightgalleryexportxray').on('onAfterOpen.lg', function (event) {
                var myVariable = $('#lightgalleryexportxray').data('lightGallery').$items.eq($('#lightgalleryexportxray').data('lightGallery').index).data('src');
                window.open(""/measure/measure.html?imgsrc="" + encodeURI(myVariable), ""mywindow"", ""scrollbars=yes,menubar=yes,resizable=yes,toolbar=yes,location=no,status=no');win.moveTo(0,0);win.resizeTo(window.screen.availWidth, window.screen.availHeight"");
            });
            $('#lightgalleryexportxray').on('onSlideClick.lg', function (event) {
                var myVariable = $('#lightgalle");
                WriteLiteral(@"ryexportxray').data('lightGallery').$items.eq($('#lightgalleryexportxray').data('lightGallery').index).data('src');
                window.open(""/measure/measure.html?imgsrc="" + encodeURI(myVariable), ""mywindow"", ""scrollbars=yes,menubar=yes,resizable=yes,toolbar=yes,location=no,status=no');win.moveTo(0,0);win.resizeTo(window.screen.availWidth, window.screen.availHeight"");
            });
        });


        $('#lightgallery').on('onCloseAfter.lg', function (event) {
            location.reload();
        });
        $('#lightgalleryxray').on('onCloseAfter.lg', function (event) {
            location.reload();
        });
        $('#lightgalleryexport').on('onCloseAfter.lg', function (event) {
            location.reload();
        });
        $('#lightgalleryexportxray').on('onCloseAfter.lg', function (event) {
            location.reload();
        });
    </script>
    <script type=""text/javascript"">
        $('#lightgalleryexport').lightSlider({
            item: 1,
            slideMargin: 0,
         ");
                WriteLiteral(@"   gallery: false,
            autowidth: true,
            slidewidth: 20,
            slideheight: 20,
            loop: false,
            onSliderLoad: function (el) {
                el.lightGallery({
                    selector: '#lightgalleryexport .lslide'
                });
            }
        });
        $('#lightgalleryxray').lightSlider({
            item: 1,
            slideMargin: 0,
            autowidth: true,
            gallery: false,
            slidewidth: 20,
            slideheight: 20,
            loop: false,
            onSliderLoad: function (el) {
                el.lightGallery({
                    selector: '#lightgalleryxray .lslide'
                });
            }
        });
        $('#lightgalleryexportxray').lightSlider({
            item: 1,
            slideMargin: 0,
            autowidth: true,
            gallery: false,
            slidewidth: 20,
            slideheight: 20,
            loop: false,
            onSliderLoad: function (el) {
                el");
                WriteLiteral(".lightGallery({\n                    selector: \'#lightgalleryexportxray .lslide\'\n                });\n            }\n        });\n    </script>\n\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_27);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_28);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(78890, 9, true);
            WriteLiteral("\n</html>\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Tuple<Scoliosis.Models.InfoBarViewModel, Scoliosis.Models.InfoInitAssessViewModel>> Html { get; private set; }
    }
}
#pragma warning restore 1591
